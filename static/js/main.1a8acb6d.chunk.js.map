{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","htmlFor","type","pattern","title","onChange","required","Component","Filter","ContactList","names","onDeleteContact","map","id","onClick","App","contacts","filter","formSubmitHandler","data","find","contact","alert","addName","text","shortid","generate","prevState","getfilteredNames","normalizedFilter","toLowerCase","includes","handleFilterChange","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","filteredNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a8acb6d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ContactForm.css\"\n\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    }\n\n\n  handleChange = ({currentTarget}) => {\n    const { name, value } = currentTarget;\n        this.setState({\n            [name]: value,\n        })\n  }\n  \n  \n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    })\n  }\n\n    render(){\n        return (\n            <>\n        \n        <form onSubmit={this.handleSubmit} className=\"ContactForm\">\n        <p>Name</p>\n        <label htmlFor=\"\">\n          <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              onChange={this.handleChange}\n              required\n          />\n          </label>\n        \n        <p>Number</p>     \n        <label htmlFor=\"\">\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              onChange={this.handleChange}\n              required\n         />\n        </label>\n\n          <button type=\"submit\" className=\"ContactForm__button\" >Add contact</button>\n        </form>\n        </>\n        )\n    }\n}\n\nexport default ContactForm;\n\n\n","import \"./Filter.css\"\n\nconst Filter = ({ value, onChange }) => {\n  return (\n      <div className=\"Filter\">\n        <label>\n          <p>Find contacts by name</p>\n        <input\n           type=\"text\"\n           name=\"filter\"\n           value={value}\n           onChange={onChange}\n          />\n          </label>\n    </div>\n    )\n}\n\nexport default Filter;","import \"./ContactList.css\";\n\nconst ContactList = ({ names, onDeleteContact }) => {\n    return (\n        <ul className=\"ContactList\">\n          {names.map(({ id, name, number }) => (\n            <li key={id} className=\"ContactList__item\">\n              <p>{name}: {number}</p>\n              <button onClick={() => onDeleteContact(id)} className=\"ContactList__button\">Delete</button>\n            </li>\n            \n          ))}\n        </ul>\n    )\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport \"./App.css\"\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport shortid from 'shortid';\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n    componentDidMount(){\n      const contacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(contacts);\n\n      if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n      }\n    }\n  \n    componentDidUpdate(prevProps, prevState){\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n      if (nextContacts !== prevContacts){\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }  \n  \n\n  formSubmitHandler = data => {\n    const { name, number } = data;\n\n    const duplicateName = this.state.contacts.find(contact => contact.name === name);\n\n    duplicateName ? alert(`${name} is already in contacts`) : this.addName(name, number);\n\n  }\n\n  addName = (text, number) => {\n\n    const name = {\n      id: shortid.generate(),\n      name: text,\n      number: number,\n    }\n\n    this.setState(prevState => ({\n      contacts: [name, ...prevState.contacts],\n    }));\n  }\n\n\n  getfilteredNames = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  handleFilterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  }\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  }\n\n\n\n  render() {\n\n    const filteredNames = this.getfilteredNames();\n\n    return (\n\n      <div className=\"Container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\n\n        <ContactList names={filteredNames} onDeleteContact={this.deleteContact} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}